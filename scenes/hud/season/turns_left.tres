[gd_resource type="VisualShader" load_steps=4 format=3 uid="uid://bvu8h5v1ylrb"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_y456f"]
input_name = "color"

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_uahkv"]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_52u06"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(2, 2)]
op_type = 0
operator = 2

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;




void vertex() {
// Input:2
	vec2 n_out2p0 = VERTEX;


// VectorOp:3
	vec2 n_in3p1 = vec2(2.00000, 2.00000);
	vec2 n_out3p0 = n_out2p0 * n_in3p1;


// Output:0
	VERTEX = n_out3p0;


}

void fragment() {
// Input:2
	vec4 n_out2p0 = COLOR;


// Output:0
	COLOR.rgb = vec3(n_out2p0.xyz);


}
"
graph_offset = Vector2(-380.192, 156.574)
mode = 1
flags/light_only = false
nodes/vertex/2/node = SubResource("VisualShaderNodeInput_uahkv")
nodes/vertex/2/position = Vector2(-220, 180)
nodes/vertex/3/node = SubResource("VisualShaderNodeVectorOp_52u06")
nodes/vertex/3/position = Vector2(160, 180)
nodes/vertex/connections = PackedInt32Array(2, 0, 3, 0, 3, 0, 0, 0)
nodes/fragment/2/node = SubResource("VisualShaderNodeInput_y456f")
nodes/fragment/2/position = Vector2(-240, 160)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 0)
